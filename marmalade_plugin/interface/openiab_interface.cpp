/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "openiab.h"


#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
// For MIPs (and WP8) platform we do not have asm code for stack switching
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL_LOCK
#endif
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*openiabRegister_t)(openiabCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*openiabUnRegister_t)(openiabCallback cbid, s3eCallback fn);
typedef       void(*mapSku_t)(const char* sku, const char* storeName, const char* storeSku);
typedef OpenIabSkuDetails*(*getSkuDetails_t)(const char* sku);
typedef       void(*init_t)(OpenIabOptions* options, const char** skuList, int skuListCount);
typedef       void(*purchaseProduct_t)(const char* sku, const char* payload);
typedef       void(*purchaseSubscription_t)(const char* sku, const char* payload);
typedef       void(*consume_t)(const char* sku);
typedef OpenIabStoreNames*(*openiabStoreNames_t)();
typedef OpenIabSkuDetails**(*getSkuListDetails_t)(const char** skuList, int skuListCount);

/**
 * struct that gets filled in by openiabRegister
 */
typedef struct openiabFuncs
{
    openiabRegister_t m_openiabRegister;
    openiabUnRegister_t m_openiabUnRegister;
    mapSku_t m_mapSku;
    getSkuDetails_t m_getSkuDetails;
    init_t m_init;
    purchaseProduct_t m_purchaseProduct;
    purchaseSubscription_t m_purchaseSubscription;
    consume_t m_consume;
    openiabStoreNames_t m_openiabStoreNames;
    getSkuListDetails_t m_getSkuListDetails;
} openiabFuncs;

static openiabFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x70e383a3, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: openiab");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x70e383a3, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool openiabAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult openiabRegister(openiabCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[0] func: openiabRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_openiabRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult openiabUnRegister(openiabCallback cbid, s3eCallback fn)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[1] func: openiabUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_openiabUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void mapSku(const char* sku, const char* storeName, const char* storeSku)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[2] func: mapSku"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_mapSku(sku, storeName, storeSku);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

OpenIabSkuDetails* getSkuDetails(const char* sku)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[3] func: getSkuDetails"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    OpenIabSkuDetails* ret = g_Ext.m_getSkuDetails(sku);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void init(OpenIabOptions* options, const char** skuList, int skuListCount)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[4] func: init"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_init(options, skuList, skuListCount);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void purchaseProduct(const char* sku, const char* payload)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[5] func: purchaseProduct"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_purchaseProduct(sku, payload);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void purchaseSubscription(const char* sku, const char* payload)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[6] func: purchaseSubscription"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_purchaseSubscription(sku, payload);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

void consume(const char* sku)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[7] func: consume"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_consume(sku);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}

OpenIabStoreNames* openiabStoreNames()
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[8] func: openiabStoreNames"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    OpenIabStoreNames* ret = g_Ext.m_openiabStoreNames();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

OpenIabSkuDetails** getSkuListDetails(const char** skuList, int skuListCount)
{
    IwTrace(OPENIAB_VERBOSE, ("calling openiab[9] func: getSkuListDetails"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    OpenIabSkuDetails** ret = g_Ext.m_getSkuListDetails(skuList, skuListCount);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}
